{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$schemaVersion": "0.4.0",
  "modelTags": "",
  "$id": "https://scm-ngsi-ld.github.io/smart-data-models/models/WasteContainer/schema.json",
  "title": " - Waste Management / Waste Container",
  "description": "A waste container",
  "type": "object",
  "allOf": [
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
    },
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Location-Commons"
    },
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/PhysicalObject-Commons"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "WasteContainer"
          ],
          "description": "Property. NGSI Entity Type: It has to be WasteContainer"
        },
        "districtId": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. The district identifier of which the container is a part of within the Smart City Manager platform"
        },
        "districtName": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. The district name of which the container is a part of within the Smart City Manager platform"
        },
        "fillingLevel": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Property. Model:'https://schema.org/Number'. Filling level of the container"
        },
        "category": {
          "type": "array",
          "description": "Property. Model:'https://schema.org/Text'. Container's category. Enum:' fixed, ground, other, portable, underground'",
          "items": {
            "type": "string",
            "enum": [
              "fixed",
              "ground",
              "other",
              "portable",
              "underground"
            ]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "cargoWeight": {
          "type": "number",
          "minimum": 0,
          "description": "Property. Model:'https://schema.org/Number'. Weight of the container load"
        },
        "temperature": {
          "type": "number",
          "description": "Property. Temperature inside the container. Model:'http://schema.org/Number'"
        },
        "methaneConcentration": {
          "type": "number",
          "minimum": 0,
          "description": "Property. Model:'https://schema.org/Number'. Methane (CH4) concentration inside the container"
        },
        "storedWasteKind": {
          "type": "string",
          "enum": [
            "organic",
            "inorganic",
            "glass",
            "oil",
            "plastic",
            "metal",
            "paper",
            "batteries",
            "electronics",
            "hazardous",
            "other"
          ],
          "description": "Property. Model:'https://schema.org/Text'. Kind/s of waste stored by the container. Enum:'organic, inorganic, glass, oil, plastic, metal, paper, batteries, electronics, hazardous, other'. Or any other value which does not fit within the former. "
        },
        "storedWasteOrigin": {
          "type": "string",
          "enum": [
            "household",
            "municipal",
            "industrial",
            "construction",
            "hostelry",
            "agriculture",
            "cardboard",
            "other"
          ],
          "description": "Property. Model:'https://schema.org/Text'. Origin of the waste stored. Enum:'household, municipal, industrial, construction, hostelry, agriculture, other' "
        },
        "storedWasteCode": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text' As per the regulation, waste codes which precisely identifies waste origin and kind. Depend on the target regulation. For Europe, check [Europe's List of Waste](http://ec.europa.eu/environment/waste/framework/list.htm)"
        },
        "serialNumber": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/serialNumber'. Serial number of the container"
        },
        "solarCharge": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. The amount of solar charge the container is receiving. Expressed in the Ampere-hour format"
        },
        "regulation": {
          "type": "string",
          "description": "Property. Regulation under which the container is operating. Model:'http://schema.org/Text'"
        },
        "responsible": {
          "type": "string",
          "description": "Property. Responsible for the container, i.e. entity in charge of  actuating (emptying, collecting, etc). Model:'https://schema.org/Text'"
        },
        "dateServiceStarted": {
          "type": "string",
          "format": "date-time",
          "description": "Property. Model:'https://schema.org/Date'. Date at which the container started giving service"
        },
        "dateLastEmptying": {
          "type": "string",
          "format": "date-time",
          "description": "Property. Model:'https://schema.org/DateTime'. Timestamp which represents when the container was emptied last time"
        },
        "nextActuationDeadline": {
          "type": "string",
          "format": "date-time",
          "description": "Property. Model:'https://schema.org/DateTime'. Deadline for next actuation to be performed (emptying, picking up, etc.)"
        },
        "actuationHours": {
          "type": "string",
          "description": "Property. Model:'openingHours'. Hours suitable for performing actuations over the container"
        },
        "dateLastCleaning": {
          "type": "string",
          "format": "date-time",
          "description": "Property. When the container was cleaned last time. Model:'https://schema.org/DateTime'. "
        },
        "nextCleaningDeadline": {
          "type": "string",
          "format": "date-time",
          "description": "Property. Model:'https://schema.org/DateTime'. Deadline for next cleaning"
        },
        "numberOfThrowins": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. The number of times something has been thrown into the container"
        },
        "numberOfPressings": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. The number of times the container has pressed its trash"
        },
        "isleId": {
          "type": "string",
          "description": "Property. Identifier (or name) of the isle where the container is placed. This attribute should be used when entities of type `WasteContainerIsle` are not being modelled specifically. Otherwise, `refWasteContainerIsle` should be used"
        },
        "scmStatus": {
          "type": "string",
          "enum": [
            "available",
            "error",
            "no-contact"
          ],
          "description": "Property. Container''s status from the Smart City Manager Platform. Enum:''available, error, no-contact''.  -   `available`. Container has no issues and is actively communicating. `error`. Container has one or more issues, might still be communicating. `no-contact`. Container has not communicated in a while."
        },
        "timeInstant": {
          "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/timeInstant"
        },
        "batteryPercentage": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. The percentage of the battery"
        },
        "binCapacity": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. Total capacity in terms of the volume of waste the bin can hold"
        },
        "binColor": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Color of the bin. Could be used for indicating the type of waste. The color coding should follow the conventions applicable to the geographical area the bins are located"
        },
        "wardId": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text. Ward Id of the entity corresponding to this observation"
        },
        "license_plate": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text. Gives the License Plate number of the vehicle. SameAs: 'license_plate' field from GTFS Realtime message-VehicleDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor)"
        },
        "RFID": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text. Gives the ID of the RFID reader"
        },
        "binFullnessThreshold": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. The fullness threshold level of the bin defined as the level (in terms of percentage) when the bin full alert or notification will be generated"
        },
        "binRecommendedLoad": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. Recommended load (weight) that the waste bin corresponding to this observation can hold"
        },
        "binId": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text. Id of the waste carrying bin"
        },
        "binMaxLoad": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. Maximum load (weight) that the waste bin can hold"
        },
        "binLoggedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Property. Model:'https://schema.org/Text'. Time when the bin's level was last logged"
        }
      }
    }
  ],
  "required": [
    "id",
    "type",
    "location"
  ]
}